{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import datetime\n",
        "\n",
        "blood_inventory = {\n",
        "    \"A+\": {\"units\": 10, \"expiry\": datetime.date(2024, 12, 31)},\n",
        "    \"A-\": {\"units\": 8, \"expiry\": datetime.date(2024, 12, 31)},\n",
        "    \"B+\": {\"units\": 15, \"expiry\": datetime.date(2024, 12, 31)},\n",
        "    \"B-\": {\"units\": 5, \"expiry\": datetime.date(2024, 10, 31)},\n",
        "    \"O+\": {\"units\": 20, \"expiry\": datetime.date(2024, 12, 31)},\n",
        "    \"O-\": {\"units\": 7, \"expiry\": datetime.date(2024, 12, 31)},\n",
        "    \"AB+\": {\"units\": 6, \"expiry\": datetime.date(2024, 12, 31)},\n",
        "    \"AB-\": {\"units\": 4, \"expiry\": datetime.date(2024, 12, 31)},\n",
        "}\n",
        "\n",
        "def display_inventory():\n",
        "    print(\"\\nCurrent Blood Inventory:\")\n",
        "    print(f\"{'Blood Type':<10}{'Units':<10}{'Expiry Date':<15}\")\n",
        "    for blood_type, details in blood_inventory.items():\n",
        "        print(f\"{blood_type:<10}{details['units']:<10}{details['expiry']}\")\n",
        "    print(\"\\n\")\n",
        "\n",
        "def add_blood():\n",
        "    print(\"\\nAdd New Blood to Inventory:\")\n",
        "    blood_type = input(\"Enter the blood type to add (e.g., A+, O-, B+): \").upper()\n",
        "    if blood_type in blood_inventory:\n",
        "        units_to_add = int(input(f\"Enter the number of units to add for {blood_type}: \"))\n",
        "        blood_inventory[blood_type][\"units\"] += units_to_add\n",
        "        print(f\"{units_to_add} units of {blood_type} have been added to the inventory.\")\n",
        "    else:\n",
        "        print(f\"{blood_type} is not a valid blood type. Please try again.\")\n",
        "    print(\"\\n\")\n",
        "\n",
        "def distribute_blood(hospital_request):\n",
        "    total_requested_units = sum(hospital_request.values())\n",
        "    available_units = sum(details['units'] for details in blood_inventory.values())\n",
        "\n",
        "    if total_requested_units > available_units:\n",
        "        print(\"Not enough blood available to fulfill the request.\")\n",
        "        return\n",
        "\n",
        "    print(\"\\nProcessing Hospital Request for Equal Distribution...\")\n",
        "    for blood_type, requested_units in hospital_request.items():\n",
        "        if blood_type in blood_inventory:\n",
        "            available_blood = blood_inventory[blood_type]['units']\n",
        "            if available_blood >= requested_units:\n",
        "                blood_inventory[blood_type]['units'] -= requested_units\n",
        "                print(f\"Distributed {requested_units} units of {blood_type} blood.\")\n",
        "            else:\n",
        "                print(f\"Not enough {blood_type} blood available, distributing what we have.\")\n",
        "                blood_inventory[blood_type]['units'] = 0\n",
        "    print(\"Distribution Complete.\\n\")\n",
        "\n",
        "def handle_emergency(blood_type, required_units):\n",
        "    print(\"\\nEmergency Request:\")\n",
        "    if blood_type in blood_inventory:\n",
        "        available_blood = blood_inventory[blood_type][\"units\"]\n",
        "        if available_blood >= required_units:\n",
        "            blood_inventory[blood_type][\"units\"] -= required_units\n",
        "            print(f\"Emergency: {required_units} units of {blood_type} blood provided.\")\n",
        "        else:\n",
        "            print(f\"Emergency: Not enough {blood_type} blood. Available units: {available_blood}. Please contact nearby banks.\")\n",
        "    else:\n",
        "        print(f\"Emergency: {blood_type} blood type not available in the inventory.\")\n",
        "    print(\"\\n\")\n",
        "\n",
        "def check_expiry():\n",
        "    today = datetime.date.today()\n",
        "    for blood_type, details in blood_inventory.items():\n",
        "        if details[\"expiry\"] < today:\n",
        "            print(f\"Warning: Blood type {blood_type} has expired and needs to be disposed of.\")\n",
        "            details[\"units\"] = 0\n",
        "\n",
        "def main():\n",
        "    while True:\n",
        "        print(\"Blood Bank Management System\")\n",
        "        print(\"1. View Inventory\")\n",
        "        print(\"2. Add Blood to Inventory\")\n",
        "        print(\"3. Distribute Blood to Hospitals\")\n",
        "        print(\"4. Handle Emergency Request\")\n",
        "        print(\"5. Check Expired Blood\")\n",
        "        print(\"6. Exit\")\n",
        "        choice = input(\"Enter your choice: \")\n",
        "\n",
        "        if choice == \"1\":\n",
        "            display_inventory()\n",
        "        elif choice == \"2\":\n",
        "            add_blood()\n",
        "        elif choice == \"3\":\n",
        "            hospital_request = {}\n",
        "            print(\"Enter hospital blood request (Type 'done' to finish):\")\n",
        "            while True:\n",
        "                blood_type = input(\"Enter blood type: \").upper()\n",
        "                if blood_type == \"DONE\":\n",
        "                    break\n",
        "                units = int(input(f\"Enter units of {blood_type}: \"))\n",
        "                hospital_request[blood_type] = units\n",
        "            distribute_blood(hospital_request)\n",
        "        elif choice == \"4\":\n",
        "            blood_type = input(\"Enter blood type: \").upper()\n",
        "            required_units = int(input(f\"Enter units of {blood_type} required: \"))\n",
        "            handle_emergency(blood_type, required_units)\n",
        "        elif choice == \"5\":\n",
        "            check_expiry()\n",
        "        elif choice == \"6\":\n",
        "            print(\"Exiting Blood Bank Management System. Goodbye!\")\n",
        "            break\n",
        "        else:\n",
        "            print(\"Invalid choice. Please try again.\\n\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FGtKZO3vwwEv",
        "outputId": "8d38bef9-3aeb-4c4a-c19f-a6ee6834cf10"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Blood Bank Management System\n",
            "1. View Inventory\n",
            "2. Add Blood to Inventory\n",
            "3. Distribute Blood to Hospitals\n",
            "4. Handle Emergency Request\n",
            "5. Check Expired Blood\n",
            "6. Exit\n",
            "Enter your choice: 1\n",
            "\n",
            "Current Blood Inventory:\n",
            "Blood TypeUnits     Expiry Date    \n",
            "A+        10        2024-12-31\n",
            "A-        8         2024-12-31\n",
            "B+        15        2024-12-31\n",
            "B-        5         2024-10-31\n",
            "O+        20        2024-12-31\n",
            "O-        7         2024-12-31\n",
            "AB+       6         2024-12-31\n",
            "AB-       4         2024-12-31\n",
            "\n",
            "\n",
            "Blood Bank Management System\n",
            "1. View Inventory\n",
            "2. Add Blood to Inventory\n",
            "3. Distribute Blood to Hospitals\n",
            "4. Handle Emergency Request\n",
            "5. Check Expired Blood\n",
            "6. Exit\n",
            "Enter your choice: 2\n",
            "\n",
            "Add New Blood to Inventory:\n",
            "Enter the blood type to add (e.g., A+, O-, B+): B+\n",
            "Enter the number of units to add for B+: 5\n",
            "5 units of B+ have been added to the inventory.\n",
            "\n",
            "\n",
            "Blood Bank Management System\n",
            "1. View Inventory\n",
            "2. Add Blood to Inventory\n",
            "3. Distribute Blood to Hospitals\n",
            "4. Handle Emergency Request\n",
            "5. Check Expired Blood\n",
            "6. Exit\n",
            "Enter your choice: 3\n",
            "Enter hospital blood request (Type 'done' to finish):\n",
            "Enter blood type: A+\n",
            "Enter units of A+: 3\n",
            "Enter blood type: Done\n",
            "\n",
            "Processing Hospital Request for Equal Distribution...\n",
            "Distributed 3 units of A+ blood.\n",
            "Distribution Complete.\n",
            "\n",
            "Blood Bank Management System\n",
            "1. View Inventory\n",
            "2. Add Blood to Inventory\n",
            "3. Distribute Blood to Hospitals\n",
            "4. Handle Emergency Request\n",
            "5. Check Expired Blood\n",
            "6. Exit\n",
            "Enter your choice: 4\n",
            "Enter blood type: O+\n",
            "Enter units of O+ required: 7\n",
            "\n",
            "Emergency Request:\n",
            "Emergency: 7 units of O+ blood provided.\n",
            "\n",
            "\n",
            "Blood Bank Management System\n",
            "1. View Inventory\n",
            "2. Add Blood to Inventory\n",
            "3. Distribute Blood to Hospitals\n",
            "4. Handle Emergency Request\n",
            "5. Check Expired Blood\n",
            "6. Exit\n",
            "Enter your choice: 5\n",
            "Warning: Blood type B- has expired and needs to be disposed of.\n",
            "Blood Bank Management System\n",
            "1. View Inventory\n",
            "2. Add Blood to Inventory\n",
            "3. Distribute Blood to Hospitals\n",
            "4. Handle Emergency Request\n",
            "5. Check Expired Blood\n",
            "6. Exit\n",
            "Enter your choice: 6\n",
            "Exiting Blood Bank Management System. Goodbye!\n"
          ]
        }
      ]
    }
  ]
}